// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */
class Memory {

    static int ram;
    static int free;

    /** Initializes memory parameters. */
    function void init() {
      let ram = 0;
      let free = 2048;
      return;
    }

    /** Returns the value of the main memory at the given address. */
    function int peek(int address) {
      return ram[address];
    }

    /** Sets the value of the main memory at this address
     *  to the given value. */
    function void poke(int address, int value) {
      let ram[address] = value;
      return;
    }

    /** finds and allocates from the heap a memory block of the
     *  specified size and returns a reference to its base address. */
    function int alloc(int size) {
      var int pointer;
      
      if(~(size > 0)) {
        do Sys.error(5);
      }

      let pointer = free;
      let free = free + size;

      if(~(free < 16384)) {
        do Sys.error(6);
      }

      return pointer;
    }

    /** De-allocates the given object and frees its space. */
    function void deAlloc(int object) {
      return;
    }
}
